[versions]
    sdk-compile = "34"
    agp = "8.1.1"
    org-jetbrains-kotlin-android = "1.8.10"
    core-ktx = "1.10.1"
    junit = "4.13.2"
    androidx-test-ext-junit = "1.1.5"
    espresso-core = "3.5.1"
    lifecycle-runtime-ktx = "2.6.1"
    activity-compose = "1.7.2"
    compose-bom = "2023.08.00"
    emoji2 = "1.4.0"
    appcompat = "1.6.1"
    retrofit2 = "2.9.0"
    retrofit2-gson = "2.9.0"
    okhttp = "4.11.0"
    okhttp-interceptor = "4.11.0"
    plugin-hilt-android = "2.44"
    lifecycle = "2.6.1"
    dagger-hilt-android = "2.47"
    dagger-hilt-android-compiler = "2.47"
    androidx-hilt-work = "1.0.0"
    androidx-work-runtime-ktx = "2.8.1"
    androidx-hilt-compiler = "1.0.0"
    androidx-hilt-navigation-compose = "1.0.0"
    plugin-ksp = "1.9.0-1.0.13"
material = "1.9.0"

[libraries]
    #Core Libraries
    core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
    appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
    activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
    emoji2 = { module = "androidx.emoji2:emoji2", version.ref = "emoji2" }

    #Retrofit
    retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
    refofit2-gson-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2-gson" }
    okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
    okhttp-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp-interceptor" }

    #Testing Libraries
    junit = { module = "junit:junit", version.ref = "junit" }
    androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
    espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }

    #Hilt
    dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger-hilt-android"}
    dagger-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger-hilt-android-compiler"}
    androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidx-hilt-work"}
    androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt-compiler"}
    androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidx-hilt-navigation-compose"}
    androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work-runtime-ktx"}

    #Lifecyle
    lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle"}
    lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle"}
    lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle"}


    #Compose Libraries
    compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }

        #Compose Material3
        compose-material3 = { module = "androidx.compose.material3:material3" }

        #Compose UI
        compose-ui = { module = "androidx.compose.ui:ui" }
        compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }

        #Compose Preview Support
        compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
        compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }

        #Compose UI Testing
        compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
        compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }

        #Compose Animation
        compose-animation = { module = "androidx.compose.animation:animation" }

        #Compose Foundation
        compose-foundation = { module = "androidx.compose.foundation:foundation" }

        #Compose runtime
        compose-runtime = { module = "androidx.compose.runtime:runtime" }

        #Live data observeAsState
        compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


[plugins]
    com-android-application = { id = "com.android.application", version.ref = "agp" }
    org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version = "1.9.0" }
    com-google-dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "plugin-hilt-android"}
    dagger-hilt-android-plugin = { id = "dagger.hilt.android.plugin", version.ref = "plugin-hilt-android" }
    com-google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "plugin-ksp"}
com-android-library = { id = "com.android.library", version.ref = "agp" }

[bundles]

